
struct Ray
{
    o : Point,
    d : Vec
}

fn ray(o : Point, d : Vec) -> Ray
{
    // TODO: assert(almost(vlen(d), 1.0f))
    Ray{ o:o, d:d }
}

fn ray0() -> Ray
{
    ray(point0(), vec0())
}

fn rayNormalize(o : Point, d : Vec) -> Ray
{
    ray(o, normalize(d))
}

fn rayP(r : Ray, dist : float) -> Point
{
    pvadd(r.o, vfmul(r.d, dist))
}


