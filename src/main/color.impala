struct Color
{
    r : float,
    g : float,
    b : float
}

fn color(r : float, g : float, b : float) -> Color
{
    Color{ r:r, g:g, b:b }
}

fn cclamp01(c : Color) -> Color
{
    Color{ r : clamp(c.r, 0.0f, 1.0f), g : clamp(c.g, 0.0f, 1.0f), b : clamp(c.b, 0.0f, 1.0f) }
}


fn col_rgb2int(cc : Color) -> u32
{
    let c = cclamp01(cc);
     0xff000000u32
     | ((((c.b*255.0f) as int) as u32) << 16u32)
     | ((((c.g*255.0f) as int) as u32) << 8u32 )
     | ((((c.r*255.0f) as int) as u32)         )
}
