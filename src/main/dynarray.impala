
struct DynArray {
    elemSize: uint,
    length: uint,
    capacity: uint,
    data: &[u8],
}

fn dynArrayInit() -> &DynArray
{
    ~DynArray{ elemSize: 0u, length: 0u, capacity: 0u, data: 0 as &[u8] }
}

// append an entry to the array, return its index
fn dynArrayAppend(array: &DynArray, obj: &[u8]) -> uint
{
    0u // FIXME
}

fn dynArrayFetch(array: &mut DynArray, idx: uint) -> &u8
{
    &array.data(idx*array.elemSize)
}
