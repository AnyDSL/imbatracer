fn iteration(width : int, height : int, body : fn(int, int) -> () ) -> ()
{
    let unroll = 1;
    let dim = (width, height/unroll, 1);
    let block = (128, 1, 1);

    acc(acc_dev(), dim, block, || -> () {
        let gid_x = acc_gidx();
        let gid_y = acc_tidy() + acc_bdimy() * acc_bidy() * unroll;

        for i in @range(0, unroll) {
            body(gid_x, gid_y + i * acc_bdimy());
        }
    });
}

fn assert(f : fn() -> bool, i : int) -> ()
{
}


// substitutions for stuff that's not available on accelerated devices currently
// FIXME need proper implementation of the below
fn fabsf(a: float) -> float
{
    if a < 0.0f { -a } else { a }
}
fn tanf(x: float) -> float { x }
fn atan2f(x: float, y: float) -> float { x/y }
fn sinf(x: float) -> float { x }
fn cosf(x: float) -> float { x }

