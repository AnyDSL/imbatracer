
fn renderIteration(width : int, height : int, measureTime : bool, state : &State, setcolor: SetColorFn, getcolor: GetColorIFn ) -> ()
{
    let start = thorin_get_micro_time();
    let mut rtstate = RTState{ cam: state.cam, integrator: state.integrator, scene: state.scene };
    for y in $range(0, height) {
        for x in $inner_loop(0, width) {
            let mut scratch = @emptyScratch(); // scratch space for the current intersection (TODO is this better than passing it around?)
            @setcolor(x, y, @getcolor(x, y, &rtstate, &scratch));
        }
    };
    let stop = thorin_get_micro_time();
    if measureTime { thorin_print_micro_time(stop-start); };
}


fn assert(f : fn() -> bool, i : int) -> ()
{
    if @isDebug() && !f() {
        assert_failed(i)
    }
}
