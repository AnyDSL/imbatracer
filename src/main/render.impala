fn renderImage(mut buf : &[u32], width : int, height : int, body : fn(float, float) -> Color) -> ()
{
    let wf = width as float;
    let hf = height as float;
    for x, y in iteration(width, height)
    {
        // render in the center of the pixel
        let nx = (x as float + 0.5f) / wf;
        let ny = (y as float + 0.5f) / hf;
        // put color into index
        let idx = y*width+x;
        assert(||{idx >= 0 && idx < width*height}, 50);
        buf(idx) = col_rgb2int(renderCoords(body, nx, ny));
    }
}

fn renderCoords(getcol : fn(float, float) -> Color, x : float, y : float) -> Color
{
    // convert to screen coordinates (remember to swap y axis)
    let sx =  (x - 0.5f) * 2.0f;
    let sy = -(y - 0.5f) * 2.0f;

    getcol(sx, sy)
}
