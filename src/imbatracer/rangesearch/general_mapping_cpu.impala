fn alloc_buf(size: i32) -> Buffer {
    alloc_cpu(size)
}

fn output_as_host_buf(origin_buf: Buffer, size: i32, body: fn(Buffer) -> ()) -> () {
    body(origin_buf);
}

fn use_host_buf_as(host_buf: Buffer, size: i32, body: fn(Buffer) -> ()) -> () {
    body(host_buf);
}

fn iterate(start: i32, end: i32, body: fn(i32) -> ()) -> () {
    for i in range(start, end) {
        body(i);
    }
}

fn exclusive_prefix_sum(input: &[i32], mut output: &[i32], size: i32) -> () {
    let mut sum = 0i32;
    for i in range(0, size) {
        let tmp = input(i);
        output(i) = sum;
        sum += tmp;
    }
}
