fn invoke_lightshader(shader_ref: ShaderRef, intensity: Vec3, pos: Vec3, dir: Vec3) -> f32 {
    1.0f / (2.0f * flt_pi)  // probability of uniform sampling a hemi light
}

fn call_shader(queue_in: &RayQueue, queue_out: &RayQueue, shader_ref: ShaderRef, mut framebuffer: &Texture, scene: &Scene, rnd: fn() -> f32) -> () {
    for i in range(0, queue_in.count) @{
        //let val = basic_shader(extract_ray(*queue_in, i), queue_out, scene, rnd);
        let val = const_lambertian(extract_ray(*queue_in, i), queue_out, scene, rnd);
        
        framebuffer.pixels(i) = val;
    }
}
